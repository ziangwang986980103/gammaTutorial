{"cells":[{"id":"2f53d839-8a94-4459-904a-aa4e2abdd276","source":"Hey, I wonder how websites are created. I’ve got a great idea and want to put it on a webpage. And let people visit it! Can you help me create a webpage?","metadata":{"sender":"user","directives":[]}},{"id":"384dd956-c31e-41ca-8a64-4465bf4e9b72","source":"Sure, what’s it about?","metadata":{"sender":"assistant","directives":[]}},{"id":"101b4bfe-7782-4a5b-899d-02b744fdfa28","source":"It’s a secret! I can’t just give you my precious idea. Just teach me how to create it. ","metadata":{"sender":"user","directives":[]}},{"id":"615438c9-28e8-4c9f-abf3-f1015f3f1c38","source":"Okay, but first, you’ll need to learn how to code with HTML.","metadata":{"sender":"assistant","directives":[]}},{"id":"7cd06bc4-cb9f-4eb4-897f-d34f84ca1082","source":"HTML? What is it?","metadata":{"sender":"user","directives":[]}},{"id":"a68589df-e5e1-4219-a472-757d75ae074e","source":"HTML is a programming language. It’s unique in that it is a markup language.","metadata":{"sender":"assistant","directives":[]}},{"id":"50c947bf-9a11-4a99-b95a-c6ab97722266","source":"Oh no. I don’t like coding. Is it difficult to learn HTML?","metadata":{"sender":"user","directives":[]}},{"id":"9919acd6-69f9-45c0-a2a9-8a9a68fa04db","source":"No need to worry. That’s why I’m here for you.","metadata":{"sender":"assistant","directives":[]}},{"id":"27a8c239-21e4-49e4-b6ba-7a048d5118af","source":"Okay… and what’s a markup language?","metadata":{"sender":"user","directives":[]}},{"id":"08c1da4c-4443-45a8-b93e-7a68fa7c3f71","source":"It is a language for defining a document that has formatting (for example, bold text or italic text), multimedia (for example, images and videos), references to other web pages (this is fundamentally important), and everything else that a web page can contain! This means that you need to learn HTML in order to create a web page. \n","metadata":{"sender":"assistant","directives":[]}},{"id":"b5443610-28f5-4164-a2f3-742f6a8127fa","source":"Um.. I don’t really understand. You mean I can create the whole website and all functionalities inside it only using HTML?","metadata":{"sender":"user","directives":[]}},{"id":"91068add-3950-40e1-9f86-4fac8492f88e","source":"Not everything - we’ll get to this later again, but at least all the contents inside the page can be created using HTML.","metadata":{"sender":"assistant","directives":[]}},{"id":"b2eb9599-0c7b-40f2-a7d6-9d487ac6b3fa","source":"Got it. Then what other languages do I need to learn to create the entire webpage?","metadata":{"sender":"user","directives":[]}},{"id":"82758d32-775c-42af-9c87-1dd061f97b89","source":"JavaScript/TypeScript and CSS are needed together with HTML. But as I said, we’ll focus on HTML for today to create the contents first. Your webpage has contents, right?","metadata":{"sender":"assistant","directives":[]}},{"id":"0fbb499c-40bf-49a7-b085-e4c5121835eb","source":"Yes it does.","metadata":{"sender":"user","directives":[]}},{"id":"cec430ef-d88f-48c3-8f4f-830494d41589","source":":::multiple-choice\nCan you create all functionalities on a webpage only using HTML?\n::option[Yes]{feedback=\"Incorrect. Think again what HTML's roles are.\"}\n::option[No]{correct feedback=\"Correct!\"}\n:::","metadata":{"sender":"assistant","directives":[{"id":"cec430ef-d88f-48c3-8f4f-830494d41589-multiple-choice-1","type":"multiple-choice"},{"id":"cec430ef-d88f-48c3-8f4f-830494d41589-option-1","type":"option"},{"id":"cec430ef-d88f-48c3-8f4f-830494d41589-option-2","type":"option"}]}},{"id":"489f044c-c917-4527-ad76-fea51d5c7ed8","source":":::multiple-choice\nWhat is the main purpose of using HTML?\n::option[Style the webpage]{feedback=\"Incorrect.\"}\n::option[Create content of the webpage]{correct feedback=\"Great!\"}\n::option[Add interaction between elements, such as closing a new tab, etc.]{feedback=\"Incorrect.\"}\n:::","metadata":{"sender":"assistant","directives":[{"id":"489f044c-c917-4527-ad76-fea51d5c7ed8-multiple-choice-1","type":"multiple-choice"},{"id":"489f044c-c917-4527-ad76-fea51d5c7ed8-option-1","type":"option"},{"id":"489f044c-c917-4527-ad76-fea51d5c7ed8-option-2","type":"option"},{"id":"489f044c-c917-4527-ad76-fea51d5c7ed8-option-3","type":"option"}]}},{"id":"a78c052a-6334-4858-9f3d-8ea1ba2c2aab","source":"Good. Then I’ll teach you what ‘tags’ are. Tags create elements, which are the contents inside a webpage.","metadata":{"sender":"assistant","directives":[]}},{"id":"a59fa463-74f7-4d8d-af52-81716b68bfc4","source":"Can you give me an example?","metadata":{"sender":"user","directives":[]}},{"id":"1eba9702-119d-4260-814c-86901186fc36","source":"Yes. All tags are specified with angle brackets: <>. We specify the beginning of an element by putting the tag name (the name of the element we want to create) in angle brackets (for example, ```<TAG>```). We specify the end of an element by adding a forward slash after the first angle bracket (```</TAG>```). So it will look like this:\n```html\n<TAG> this is the content of the element </TAG>\n```","metadata":{"sender":"assistant","directives":[]}},{"id":"bb2e8ee1-7049-4e5e-a037-f990099a414b","source":"Write HTML code using ```<p />``` tag with content ‘Hello, thank you for visiting’.\n:::edit-code\n::language[html]\n:::","metadata":{"sender":"assistant","directives":[{"id":"bb2e8ee1-7049-4e5e-a037-f990099a414b-edit-code-1","type":"edit-code"}]}},{"id":"6465fdea-2651-4393-872d-f2612025e94f","source":"Okay. So you mean \n```html\n<TAG> this is the content of the element </TAG>\n```\nthis will become one unique element inside the webpage?","metadata":{"sender":"user","directives":[]}},{"id":"629cb581-b5e8-4979-8ea9-d4af7729432a","source":"Correct. I’ll explain more about tags. There are many different kinds of HTML elements we can create; each element serves a different role.","metadata":{"sender":"assistant","directives":[]}},{"id":"2c787592-73b5-4177-9bc5-3489df171f32","source":"Can you give me an example?","metadata":{"sender":"user","directives":[]}},{"id":"5f018066-62fd-4394-bc82-d4937e1bec28","source":"Sure. For example, ```<p />``` specifies a paragraph of text and ```<h1 />``` specifies a “first-level” heading, which is usually a title. I’ll give you more examples later.\n","metadata":{"sender":"assistant","directives":[]}},{"id":"d0dff6a9-4ac0-435a-8507-6ac79793df92","source":"Okay. Then if I write like this: \n```html\n<h1> My Cool Web Page </h1>\n```\nThis will work like a title for my webpage?\n","metadata":{"sender":"user","directives":[]}},{"id":"ec985301-d438-4747-abc5-1a29ef7f58c1","source":"Yes, that’s right. However, unlike your example, there are elements that do not need content or cannot have it. For those cases, we can write one self-closing tag like this:\n```html\n<TAG />\n```\n","metadata":{"sender":"assistant","directives":[]}},{"id":"f3c0d953-2339-4bd5-8621-cadb11eba8db","source":"Okay. ","metadata":{"sender":"user","directives":[]}},{"id":"94ac83df-b3b7-4ed3-80c6-5d768170a16f","source":"Also, it’s very important that you understand tags are typically nested. This means one tag can contain other tags inside it. For example:\n```html\n<p>\n  This is a paragraph.\n  <em>This part of the text is emphasized. And <strong>this part is emphasized *and* important.</strong> OK.</em>\n  End of Paragraph.\n</p>\n```\nYou see ```<p />``` tag contains ```<em />``` and ```<strong />``` inside it?\n","metadata":{"sender":"assistant","directives":[]}},{"id":"f80ba05f-3969-4357-828d-18bf37a8fcb5","source":"Yes. But why do we need this nested structure in HTML?","metadata":{"sender":"user","directives":[]}},{"id":"131faf10-5977-49bb-b590-da2ee22463ce","source":"Good question. HTML elements, which were created by tags, determine the structure of the webpage. And HTML elements are in a tree structure, so it has a “root”, which is the top-level element, and has sub-elements. By using HTML element nesting, it specifies an element \"tree\" where every element can contain any number of sub-elements (which in turn can contain other sub-elements, etc.).","metadata":{"sender":"assistant","directives":[]}},{"id":"358df96c-3753-4d08-a7a8-eea4716556e1","source":"I don’t fully understand.","metadata":{"sender":"user","directives":[]}},{"id":"0b3a358a-4cb3-41cb-bbc7-00a2a7952384","source":"That’s normal. Once more, a parent element is what contains sub-elements. Therefore, every parent element must fully contain its sub-elements. ","metadata":{"sender":"assistant","directives":[]}},{"id":"27b17e67-41ac-4a7e-9433-3cfbc27eb4f3","source":"Can you give me an example?","metadata":{"sender":"user","directives":[]}},{"id":"ea21ee34-8adf-49bd-8397-089a11b7efc9","source":"Yes, here: \n```html\n<emph> <strong> </emph> </strong>\n```\nThis is unacceptable, because ```<emph />``` element does not fully contain the ```<strong />``` element.\n","metadata":{"sender":"assistant","directives":[]}},{"id":"59cbce69-7cf1-4f1b-9c47-7dc63346a07d","source":"Oh okay.","metadata":{"sender":"user","directives":[]}},{"id":"c1fc90fb-68ec-403e-9ae6-54a564c40a3e","source":"Change the wrong example above (```<emph> <strong> </emph> </strong>```) into a correct HTML form.\n:::edit-code\n::language[html]\n:::","metadata":{"sender":"assistant","directives":[{"id":"c1fc90fb-68ec-403e-9ae6-54a564c40a3e-edit-code-1","type":"edit-code"}]}},{"id":"5b673e45-0668-494a-bf1a-89f9716a637b","source":"Give five examples of HTML tags.\n:::edit-code\n::language[html]\n:::","metadata":{"sender":"assistant","directives":[{"id":"5b673e45-0668-494a-bf1a-89f9716a637b-edit-code-1","type":"edit-code"}]}},{"id":"0f34ea60-22b4-4ce1-9074-2a06dbc62dff","source":"The “root” of the tree is typically an ```<html />``` element. We normally put the content of the document inside of a ```<body />``` element.","metadata":{"sender":"assistant","directives":[]}},{"id":"c10e2849-2882-4f0f-8d43-61d78eecfcfa","source":"Then can you give me a full example of a paragraph in HTML?","metadata":{"sender":"user","directives":[]}},{"id":"0e7da7cb-2dca-417e-8de6-552f52d6fc23","source":"Of course. Here:\n```html\n<html>\n  <body>\n    <h1>My Webpage</h1>\n    <p>This is a paragraph with some <strong>important text</strong></p>\n  </body>\n</html>\n```\nCan you see the root element is ```<html />``` and has ```<body />``` and its following sub-elements under?\n","metadata":{"sender":"assistant","directives":[]}},{"id":"5698a6a2-a690-4804-91fd-a47a3aaa5ac9","source":"Yes! I got it. This is also a tree structure, right?","metadata":{"sender":"user","directives":[]}},{"id":"b61720e4-ebf3-454d-b5e2-d30ab6822570","source":"Correct. The tree looks like this (using #text to represent any text content):\n- html\n    - body\n        - h1\n            - #text: My Webpage\n        - p\n            - #text: This is a paragraph with some\n            - strong\n                - #text: important text","metadata":{"sender":"assistant","directives":[]}},{"id":"38f29cf5-9a7b-40c0-ae00-253befa5017f","source":"It makes more sense now.","metadata":{"sender":"user","directives":[]}},{"id":"59affdb6-99d1-4002-9351-55fd8b4f7ddd","source":"Using the same format above, write how the HTML tree would look like if the HTML code is like this:\n```html\n<html>\n  <body>\n    <h1>How to make a simple tomato pizza</h1>\n    <h2> Ingredients </h2>\n    <ol>\n        <li>Flour</li>\n        <li>Tomato sauce</li>\n    </ol>\n  </body>\n</html>\n```\n:::edit-code\n::language[html]\n:::\n","metadata":{"sender":"assistant","directives":[{"id":"59affdb6-99d1-4002-9351-55fd8b4f7ddd-edit-code-1","type":"edit-code"}]}},{"id":"24368206-a392-445d-80ab-c5ea066ca926","source":"Write HTML code with the following tree hierarchy:\n- html\n    - body\n        - h1\n            - #text: All about dogs\n        - h2\n            - #text: Dog breeds\n        - ul\n            - li \n                - #text: German shepherd\n            - li\n                - #text: Bulldog\n            - li\n                - #text: Poodle\n        - h2\n            - #text: 4 most popular dog colors\n        - ol\n            - li\n                - #text: black\n            - li\n                - #text: brown\n            - li\n                - #text: white\n            - li\n                - #text: red\n\n:::edit-code\n::language[html]\n:::\n","metadata":{"sender":"assistant","directives":[{"id":"24368206-a392-445d-80ab-c5ea066ca926-edit-code-1","type":"edit-code"}]}},{"id":"e6a06fa2-ae10-456d-ad8d-85d833907511","source":"Write HTML code with the following tree hierarchy:\n- html\n    - body\n        - p\n            - #text: I don’t like dogs. I\n            - em\n                - #text: love\n            - #text: them.\n\n\n:::edit-code\n::language[html]\n:::","metadata":{"sender":"assistant","directives":[{"id":"e6a06fa2-ae10-456d-ad8d-85d833907511-edit-code-1","type":"edit-code"}]}},{"id":"22398f7d-23d0-4c74-a46f-f155e2105b8d","source":"Good. Then I’ll teach you some terminology about the tree structure of HTML:\n- The root is the top-level element\n    - The ```<html />``` element is the root of the tree above\n- Element ```c``` is a child of element ```p``` if it is directly below it in the hierarchy\n    - The ```<body />``` element is a child of the ```<html />``` element\n- Conversely, element ```p``` is a parent element ```c``` if it is directly above it in the hierarchy\n- Sibling elements are elements that have the same parent\n    - The ```h1``` and ```p``` elements are siblings\n- Element ```d``` is a descendant of element ```a``` if it is below it in the hierarchy (at any level)\n    - The ```strong``` element is a descendant of the html element\n- Conversely, element ```a``` is an ancestor of element ```d``` if it is its parent (at any level)\n    - The ```html``` element is an ancestor of the ```p``` element   ","metadata":{"sender":"assistant","directives":[]}},{"id":"b6bdf298-7abb-4926-a1b3-869dd56c543b","source":"Using the terms about the tree structure of HTML, for the following code, ```<h1 />``` and ```<h2 />``` are in which relathionship?\n```html\n<html>\n  <body>\n    <h1>How to make a simple tomato pizza</h1>\n    <h2> Ingredients </h2>\n    <ol>\n        <li>Flour</li>\n        <li>Tomato sauce</li>\n    </ol>\n  </body>\n</html>\n```\n\n:::edit-code\n::language[html]\n:::","metadata":{"sender":"assistant","directives":[{"id":"b6bdf298-7abb-4926-a1b3-869dd56c543b-edit-code-1","type":"edit-code"}]}},{"id":"6ee3226b-cae0-4b7c-b5c7-968ae8bf4986","source":"Makes sense. It’s like a family structure.","metadata":{"sender":"user","directives":[]}},{"id":"488b7567-97f3-4e8c-9e43-27c261bbcae1","source":"Yes! Very good. Now I’ll tell you about adding “attributes” to each tag. ","metadata":{"sender":"assistant","directives":[]}},{"id":"eea3503b-3cf8-4b96-a914-9df549db99f4","source":"Attributes? What does it do?","metadata":{"sender":"user","directives":[]}},{"id":"17c5f83c-203e-426f-b530-8f07669875bd","source":"Attributes customize elements! For example, a hyperlink is specified with an ```<a />``` tag, but ```<a />``` itself doesn’t tell which webpage or website this element will lead users. So, this is where attributes are needed. We can add the specific URL by using attribute like this:\n```html\n<a href=\"https://umich.edu/\">The University of Michigan Homepage</a>\n```\nAn attribute has a name and a value, specified as NAME=\"VALUE\". In the case above, href is the name and “https://umich.edu/” is the value.","metadata":{"sender":"assistant","directives":[]}},{"id":"f15810a7-ae5e-4238-a30f-b046cbcd1f95","source":"Write HTML code using ```<a />``` tag with URL to your favorite website and the name of the site.\n\n:::edit-code\n::language[html]\n:::","metadata":{"sender":"assistant","directives":[{"id":"f15810a7-ae5e-4238-a30f-b046cbcd1f95-edit-code-1","type":"edit-code"}]}},{"id":"d03c2320-5bb4-4f44-9ce8-2351f9dcdb2e","source":"So it’s like giving extra information to each tag?\n","metadata":{"sender":"user","directives":[]}},{"id":"273f3ede-7833-4c21-8c36-af3ebf8c1c4a","source":"Yes. For example, in addition to ```href```, ```<a />``` elements have an optional ```target``` attribute to specify where the link should open. Some (not all) of the possible values are:\n- ```\"_self\"``` to open up in the current tab (default)\n- ```\"_blank\"``` to open up in a new tab\n","metadata":{"sender":"assistant","directives":[]}},{"id":"678a5d08-419b-4e20-b931-7fa0ec44e02d","source":"Can you give me one more example?","metadata":{"sender":"user","directives":[]}},{"id":"e0a4059c-1f98-4679-971c-10bde80b5022","source":"Of course. We can create an image element with the ```<img />``` tag. This requires ```src``` attribute by default to specify the path of the image file and an ```alt``` attribute that contains a text-based description of the image. The ```alt``` attribute is important for accessibility. So it will be like:\n```html\n<img src=\"https://brand.umich.edu/assets/brand/style-guide/logo-guidelines/U-M_Logo-Hex.png\" alt=\"Logo of the Unviersity of Michigan\" />\n```\n","metadata":{"sender":"assistant","directives":[]}},{"id":"0f0428a0-a6fd-40a4-b702-ea58dab95a12","source":"Makes sense! So I can use these tags and attributes to create my own elements on my webpage.","metadata":{"sender":"user","directives":[]}},{"id":"ff979828-1cba-4034-af7e-0740a8683a92","source":"Write HTML code for any image using ```<img />``` tag. Make sure you write the ```src``` and ```alt``` attribute.\n\n:::edit-code\n::language[html]\n:::","metadata":{"sender":"assistant","directives":[{"id":"ff979828-1cba-4034-af7e-0740a8683a92-edit-code-1","type":"edit-code"}]}},{"id":"b0a46542-a7f1-4e10-bc33-f0c8bfe82354","source":"That’s right! Remember, I told you there is ‘name’ and ‘value’ in an attribute, right? Sometimes, the specific ‘value’ of an attribute does not matter. It only matters whether the attribute is present or not.","metadata":{"sender":"assistant","directives":[]}},{"id":"df86a958-bd55-4d64-9236-722129bf4450","source":"Hmm.. okay, give me an example.","metadata":{"sender":"user","directives":[]}},{"id":"5cef05c5-4c0b-450c-be5d-798a1a7a1e9d","source":"For example, say there is a button on a webpage. Your webpage may have buttons, right?","metadata":{"sender":"assistant","directives":[]}},{"id":"7ea53df2-df05-46be-ab28-714f8269679d","source":"Yes.","metadata":{"sender":"user","directives":[]}},{"id":"86af3bc9-a454-4ec2-8d43-830121c3d935","source":"Good, then you can use the ‘disabled’ attribute in ```<button />``` element to disable it. ```<button disabled=\"true\">Disabled Button</button>``` like this. As I said, the browser only cares that the ```disabled``` attribute is set. So even if you put any value, like ```disabled=”false”```, ```“”```, or anything else, the button will be disabled. Moreover, you can omit the value and just write:\n```html\n<button disabled>Disabled Button</button>\n```\nThis will give you the same result.\n","metadata":{"sender":"assistant","directives":[]}},{"id":"7b23b65e-4d69-4ea5-984f-4c40f71b7835","source":"Got it. I guess this can be useful when I want to disable a button under certain conditions.","metadata":{"sender":"user","directives":[]}},{"id":"5db9224d-5476-4303-a15d-e63a7e53553f","source":"That’s correct. We’ll cover how to add those functionalities later.","metadata":{"sender":"assistant","directives":[]}},{"id":"41a24f6f-bdb7-4cdf-b2a6-34a92a71fa8c","source":"Okay.","metadata":{"sender":"user","directives":[]}},{"id":"1f1e7a08-421f-4d98-bae2-7eec2ba705b1","source":":::multiple-choice\nChoose two correct explanations about attributes in HTML.\n::option[Some attributes are mandatory in some tags like ```<img />```.]{correct feedback=\"Correct.\"}\n::option['The University of Michigan' text is an attribute in the following code: ```<a href=\"https://umich.edu/\">The University of Michigan Homepage</a>```.]{feedback=\"Incorrect.\"}\n::option[Some attributes can be optional in some tags.]{correct feedback=\"Correct.\"}\n::option[```<button disabled=\"false\">Disabled Button</button>``` will not disable the button.]{feedback=\"Incorrect.\"}\n:::","metadata":{"sender":"assistant","directives":[{"id":"1f1e7a08-421f-4d98-bae2-7eec2ba705b1-multiple-choice-1","type":"multiple-choice"},{"id":"1f1e7a08-421f-4d98-bae2-7eec2ba705b1-option-1","type":"option"},{"id":"1f1e7a08-421f-4d98-bae2-7eec2ba705b1-option-2","type":"option"},{"id":"1f1e7a08-421f-4d98-bae2-7eec2ba705b1-option-3","type":"option"},{"id":"1f1e7a08-421f-4d98-bae2-7eec2ba705b1-option-4","type":"option"}]}},{"id":"fcfda5b4-6fbf-4a75-b142-a108ed6e180c","source":"I also want to teach you how to write comments in HTML.","metadata":{"sender":"assistant","directives":[]}},{"id":"9d1f91fc-0630-4885-a17c-755ef83e11b3","source":"Comments? Why do we need comments?","metadata":{"sender":"user","directives":[]}},{"id":"bbf46f37-3efc-4097-9ae7-33ea9c91d730","source":"Comments are important because they can make code maintenance much easier, and can help you find bugs. Code becomes more readable with comments.","metadata":{"sender":"assistant","directives":[]}},{"id":"51455f31-8df7-49a9-8464-3276cfc24169","source":"Yeah, I’ve had some problems with reading someone else’s code in the past because I could figure out what a certain line of code is doing.","metadata":{"sender":"user","directives":[]}},{"id":"b5f961e3-4166-4e58-95e1-f9d22f34d0c2","source":"Yes, that’s one of the good reasons we use comments. HTML has its own syntax for comments: you start it with \n```html\n<!-- and end it with -->\n```","metadata":{"sender":"assistant","directives":[]}},{"id":"20aedbaf-223c-43a5-982d-a20b8a776b99","source":"Can you give me an example?","metadata":{"sender":"user","directives":[]}},{"id":"62652bbe-a87a-4dfd-a152-54d0046a8116","source":"Yes, it would look like this:\n```html\n<!-- this text is inside of a comment -->\n```\nComments will not be rendered. \n","metadata":{"sender":"assistant","directives":[]}},{"id":"5b997e49-5702-4558-a7d2-701211703ecc","source":"Got it.","metadata":{"sender":"user","directives":[]}},{"id":"801a3680-f0e1-41ce-b7e4-c0e71512da7d","source":"Write an HTML comment saying “This is a comment”  between ```<h1 />``` and ```<p />```.\n```html\n<h1>Welcome to this site</h1>\n<p>I will talk about dogs on this website.</p>\n```\n\n:::edit-code\n::language[html]\n<h1>Welcome to this site</h1>\n<p>I will talk about dogs on this website.</p>\n:::\n","metadata":{"sender":"assistant","directives":[{"id":"801a3680-f0e1-41ce-b7e4-c0e71512da7d-edit-code-1","type":"edit-code"}]}},{"id":"8ee75e63-4ae1-4019-b3b8-3a4fa5a2808f","source":"As the last concept for today, you should remember to do doctype declaration. \n","metadata":{"sender":"assistant","directives":[]}},{"id":"205ec173-a10d-4d69-9281-14618af9ee8a","source":"What is a doctype declaration?","metadata":{"sender":"user","directives":[]}},{"id":"67235778-21a1-443c-9b1f-8d77d6a5f702","source":"A doctype declaration tells the browser what kind of document to expect. This tells the browser that is rendering your document that you want to render it as a modern web page.","metadata":{"sender":"assistant","directives":[]}},{"id":"b5dec063-a1f8-4e84-8a8f-0383afc250c5","source":"Then does this mean there’s another way to render it?","metadata":{"sender":"user","directives":[]}},{"id":"805e2c4f-9377-4d4e-ab61-0acdb98c4ea7","source":"Yes. As opposed to “quirks-mode” when rendering a document, \n```html\n<!DOCTYPE html>\n``` \nensures that the browser makes a best-effort attempt at following the relevant specifications, rather than using a different rendering mode that is incompatible with some specifications (source: https://developer.mozilla.org/en-US/docs/Glossary/Doctype ).","metadata":{"sender":"assistant","directives":[]}},{"id":"394c28f1-b9b9-43fb-a67b-2275a2026b1b","source":"Okay. Where should I put it?\n","metadata":{"sender":"user","directives":[]}},{"id":"8cc112a3-9422-4e84-98fb-2d8f6e2cf07d","source":"Make sure to declare it at the top of the HTML file. Also, this is not a tag so there is no ‘closing’ tag.\n","metadata":{"sender":"assistant","directives":[]}},{"id":"17742c30-8fa1-4b86-8b7d-bb2990265c16","source":"Got it.","metadata":{"sender":"user","directives":[]}},{"id":"214d1e41-6030-49b7-954f-d87725325838","source":"This is it for today! Let’s learn common HTML elements and attributes in depth next time. ","metadata":{"sender":"assistant","directives":[]}},{"id":"b6280ce6-a082-487b-833d-85376ee69bae","source":"Thanks!","metadata":{"sender":"user","directives":[]}}],"metadata":{"title":"The Basics of HTML","id":"09ccb6f5-9630-41e3-8e60-676763be1228","agentDescription":"You are a helpful assistant who is teaching a new programmer how to program in JavaScript"},"dbookformat":1,"dbookformat_minor":0}
